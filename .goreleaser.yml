project_name: cga
report_sizes: true

before:
  hooks:
    - go mod download
    - go mod tidy
    - go run github.com/securego/gosec/v2/cmd/gosec@latest -quiet ./...
    - go run github.com/go-critic/go-critic/cmd/gocritic@latest check -enableAll ./...
    - go run github.com/google/osv-scanner/cmd/osv-scanner@latest -r .
    - go test -race ./...
builds:
  -
    id: default
    main: ./cmd/cga/main.go
    env: [ CGO_ENABLED=0 ]
    goos: [ linux, windows, darwin ]
    goarch: [ amd64, arm64 ]
    flags: [ -mod=vendor ]

release:
  ids: [ default ]
  draft: true
  replace_existing_draft: true
  target_commitish: "{{ .Commit }}"
  #  discussion_category_name: General
  prerelease: auto
  mode: replace
  header: |
    ## ⚙️ The `{{ .Tag }}` release
  footer: |
    ## Install or update

    For native Go installation (any platforms):

    ```console
    go install github.com/comehere127/create-go-app/cmd/cga@latest
    ```

    For [Homebrew][brew_url] users (GNU/Linux, macOS):

    ```console
    # Tap a new formula:
    brew tap create-go-app/tap

    # Installation:
    brew install create-go-app/tap/cli

    # Upgrade to the latest:
    brew upgrade create-go-app/tap/cli
    ```

    > 💡 Note: See the [`Wiki page`][wiki_url] to understand the project structure and get general recommendations.

    ## Your help to improve project

    I'd be truly grateful for help with:

    - Creating tests (and/or benchmarks) for code.
    - Improving existing functions, structs, or tests.
    - Feature requests with interesting functions that would be good to add.
    [brew_url]: https://brew.sh
  disable: false
  skip_upload: false

brews:
  -
    repository:
      owner: comehere127
      name: homebrew-comehere127
      branch: main
      token: "{{ .secrets.PUBLISHER_TOKEN }}"
      pull_request:
        enabled: true
      git:
        url: "git@github.com:comehere127/homebrew-comehere127.git"
        private_key: "{{ .Env.PRIVATE_KEY_PATH }}"
    commit_author:
      name: Kent Duong
      email: duonghominhtu1207@gmail.com
    commit_msg_template: "Brew formula update for {{ .ProjectName }} version {{ .Tag }}"
    folder: Formula
    caveats: |
      After install (or update) cga, let's create a new project via interactive console UI in current folder:

      $ cga create

      That's all you need to know to start! 🎉
    homepage: "https://github.com/comehere127/create-go-app"
    description: |
      Create a new production-ready project with backend (Golang) by running CLI command.
      Focus on writing code and thinking of business-logic! The CLI will take care of the rest.
    license: Apache 2.0
    skip_upload: false
    dependencies:
      - name: git
      - name: npm

archives:
  -
    format_overrides:
      - goos: windows
        format: zip
    files: [ LICENSE, README.md ]

checksum:
  name_template: "checksums.txt"

changelog:
#  use: github
  sort: asc
  abbrev: -1
  filters:
    exclude: [ "^*.md", "^*.ya?ml" ]
  groups:
    - title: Features
      regexp: ^.*?(F|f)eature.*?$
      order: 0
    - title: Bug fixes
      regexp: ^.*?((B|b)ug)|((F|f)ix).*?$
      order: 1
    - title: Improvements
      regexp: ^.*?(I|i)mprove.*?$
      order: 2
    - title: Updates
      regexp: ^.*?(U|u)pdate.*?$
      order: 3
    - title: Security issues
      regexp: ^.*?(S|s)ecurity.*?$
      order: 4
    - title: Delete unused or stale
      regexp: ^.*?((D|d)elete)|((U|u)nused)|((S|s)tale).*?$
      order: 5
    - title: Others
      order: 999
